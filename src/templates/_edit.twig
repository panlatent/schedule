{% extends "_layouts/cp" %}

{% set groupId = groupId is defined ? groupId : craft.app.request.getQueryParam('groupId') %}
{% set title = isNewSchedule ? 'New a schedule'|t('schedule') : 'Edit: {name}'|t('schedule', {name: schedule.name}) %}
{% set selectedSubnavItem = "schedules" %}
{% set fullPageForm = true %}
{% set crumbs = [{
    label: 'Schedule'|t('schedule'),
    url: url('schedule')
}] %}

{% set tabs = [
    {label: "Settings"|t('app'), url: '#settings'},
] %}

{% import "_includes/forms" as forms %}

{% block content %}
    <div id="settings" class="schedule-settings">
        <input type="hidden" name="action" value="schedule/schedules/save-schedule">
        <input type="hidden" name="scheduleId" value="{{ schedule.id }}">

        {{ forms.selectField({
            label: 'Group'|t('app'),
            id: 'groupId',
            name: 'groupId',
            value: schedule.groupId ?? groupId,
            options: groupOptions,
        }) }}

        {{ forms.textField({
            label: 'Name'|t('app'),
            required: true,
            id: 'name',
            name: 'name',
            value: schedule.name,
            errors: schedule.getErrors('name'),
        }) }}

        {{ forms.textField({
            label: 'Handle'|t('app'),
            required: true,
            id: 'handle',
            name: 'handle',
            value: schedule.handle,
            errors: schedule.getErrors('handle'),
        }) }}

        {{ forms.checkboxField({
            label: 'Enabled Log'|t('schedule'),
            id: 'enabledLog',
            name: 'enabledLog',
            checked: schedule.enabledLog,
            errors: schedule.getErrors('enabledLog'),
        }) }}

        {{ forms.textareaField({
            label: 'Description'|t('app'),
            id: 'description',
            name: 'description',
            value: schedule.description,
            errors: schedule.getErrors('description'),
        }) }}

        <hr>

        {{ forms.selectField({
            label: 'Schedule Type'|t('schedule'),
            name: 'type',
            value: className(schedule),
            options: scheduleTypeOptions,
            toggle: true,
        }) }}

        {% for scheduleType in scheduleTypes %}
            {% set isCurrent = (scheduleType == className(schedule)) %}
            {% set scheduleTypeIds = scheduleTypeIds|merge([scheduleType|id]) %}
            <div id="{{ scheduleType|id }}"{% if not isCurrent %} class="hidden"{% endif %}>
                {% if isCurrent %}
                    {{ schedule.getSettingsHtml()|raw }}
                {% else %}
                    <div class="settings-loading">
                        <div class="spinner"></div>
                    </div>
                {% endif %}
            </div>
        {% endfor %}

    </div>
{% endblock %}

{% block details %}
    <div class="meta">
        {{ forms.lightswitchField({
            label: 'Enabled'|t('schedule'),
            id: 'enabled',
            name: 'enabled',
            on: schedule.enabled,
            errors: schedule.getErrors('enabled'),
        }) }}
    </div>
    <div class="meta read-only">
        <div class="data">
            <h5 class="heading">{{ "Created at"|t('app') }}</h5>
            <div class="value">{{ schedule.dateCreated|datetime('short') }}</div>
        </div>
        <div class="data">
            <h5 class="heading">{{ "Updated at"|t('app') }}</h5>
            <div class="value">{{ schedule.dateUpdated|datetime('short') }}</div>
        </div>
        {% if schedule.lastFinishedDate is not empty %}
            <div class="data">
                <h5 class="heading">{{ "Last running at"|t('schedule') }}</h5>
                <div class="value">
                    {% if schedule.lastStatus %}
                        <span class="status green"></span>
                    {% else %}
                        <span class="status red"></span>
                    {% endif %}
                    {{ schedule.lastFinishedDate|datetime('short') }}
                </div>
            </div>
        {% endif %}
    </div>
{% endblock %}

{% set scheduleTypeIds = [] %}
{% for scheduleType in scheduleTypes %}
    {% if scheduleType != className(schedule) %}
        {% set scheduleTypeIds = scheduleTypeIds|merge({(scheduleType): scheduleType|id}) %}
    {% endif %}
{% endfor %}

{% js %}
    var scheduleTypes = {{ scheduleTypeIds|json_encode|raw }};
    $('select[name=type]').on('change', function(value) {
        var selectedType = $(this).val();
        if (selectedType in scheduleTypes) {
            var id = '#' + scheduleTypes[selectedType];
            $.get("{{ actionUrl("schedule/schedules/get-schedule-settings-html") }}", {
                scheduleType: selectedType,
            }, function(ret) {
                $(id).html(ret.html + ret.js);
            });
            delete scheduleTypes[selectedType]
        }
    });
{% endjs %}

{% css %}
    .settings-loading {
    display: block;
    height: 100px;
    margin: 0px 0px;
    padding: 0;
    border: 1px solid #fff;
    border-radius: 4px;
    }
    .spinner {
    margin: 25px auto;
    display: block;
    width: 50px;
    height: 40px;
    text-align: center;
    font-size: 10px;
    }
{% endcss %}